PUAE
---------------------------------------------------
PUAE tries to continue where E-UAE left off..
PUAE versioning is based on the merged WinUAE version..

Work until 2.8.1 was done by:
	Mustafa 'GnoStiC' TUFAN (mustafa.tufan@gmail.com)

GnoStiC disappeared from github a couple years ago,
so I (rofl0r) am maintaining it now.

GIT
---------------------------------------------------
http://github.com/rofl0r/PUAE


PUAE Binaries
---------------------------------------------------
I don't supply binaries for any OS.

You should also check FS-UAE: http://fengestad.no/wp/fs-uae
                  and WinUAE: http://www.winuae.net


PUAE Ports (those i'm aware of)
---------------------------------------------------
Pandora    : http://apps.openpandora.org/cgi-bin/viewapp.pl?/Emulator/puae.inf
XBOX360    : http://lantus360.com
Android    : http://droidpuae.blogspot.com
           : https://github.com/pelya/commandergenius/tree/sdl_android/project/jni/application/puae
PS3        : http://metaneutrons.blogspot.com/2011/07/porting-puae-to-playstation-3.html
Raspberry  : http://www.valvers.com/raspberry-pi#toc-amiga-emulation-puae
PNaCl      : http://pnacl-amiga-emulator.appspot.com
AROS       : http://aminet.net/package/misc/emu/p-uae.i386-aros
Retroarch  : https://github.com/libretro/libretro-uae

About PUAE
---------------------------------------------------

PUAE (and EUAE) traditionally offered tons of configuration options,
which resulted in a maintenance nightmare, with most of the untested
combinations broken.
recently the build system was refactored to allow only a minimal set
of configurable options, in the hope that this will ease the situation.

At this time, only a GTK+2 and SDL frontend are supported, as well as
a subset of host operating systems and machines.

Development is mainly focused on linux and SDL 1.2.
Since SDL2 was supported at some point it should be possible to make it
work again with some minor tweaks. File a PR if you're interested.

See also the docs directory (might be partially outdated).

Difference to FS-UAE
---------------------------------------------------

UAE was originally written in C, and WinUAE basically continued
using only the C subset of C++ but renamed files to .cc so MSVC's
C++ compiler could be used instead of its crippled C compiler
which produces abysmally bad code.
When merging changes from WinUAE, PUAE renames the files to .c before
diffing and compiles everything as C.

FS-UAE otoh embraces C++ and its new features which leads to a lot
longer compile times. Additonally it makes heavy use of OpenGL and 3D
effects for its UI, so if your GPU isn't that great or you don't have
OpenGL at all, it's unusable.
Additionally FS-UAE introduced a dependency on GLib.

PUAE works just fine without OpenGL.

Compiling PUAE
---------------------------------------------------

check out the sources from git, then run `autoreconf -i` to
generate the configure script.

run `./configure --help` to read which `--with-...` options
are available.

then run `./configure` with the options you require, followed
by `make -jN` where N is the number of CPU cores.

See also docs/compiling.txt (which may be outdated).

Tested environment:
Linux, x86_64, GCC 6.5.0.

Using PUAE
----------

after build, cd to src, and put your kickstart roms into `roms` and
your adf files into `disks`. then run `./uae`.
in the SDL gui you may now select a ROM (confirm selection with `b`
button either on keyboard or joypad), and an adf file.
using button b will put the file into DF0, while button a will put
it into DF1.
you can get back into the menu using `F12` key - while inside the
menu you can save/load savestates and toggle fullscreen mode with
(right)ALT-enter.
Note that PUAE sometimes gets stuck when selecting `exit` - therefore
it's a good idea to quit fullscreen mode before doing that.


Bug Reports/Contact
---------------------------------------------------
Open an issue here on github.


